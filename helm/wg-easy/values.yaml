# Default values for wg-easy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

enabled: true
replicaCount: 1

image:
  repository: ghcr.io/wg-easy/wg-easy
  pullPolicy: IfNotPresent
  tag: ""

healthCheckUrl: /
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
terminationGracePeriodSeconds: 10
environmentVariables:
  WG_HOST: localhost # WAN IP, or a Dynamic DNS hostname.
  PASSWORD: password # Password for the UI.
  WG_DEVICE: eth0
  WG_DEFAULT_DNS: 1.1.1.1, 8.8.8.8

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    add:
      - NET_ADMIN
      - SYS_MODULE
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  externalTrafficPolicy: Cluster
  ui:
    port: 51821
  vpn:
    port: 51820
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/probe-path: "/"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  hosts:
    - host: wg-easy.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: wg-easy-tls
  #    hosts:
  #      - wg-easy.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

volume:
  enabled: true
  className: ""
  size: 100m
  annotations:
    helm.sh/resource-policy: "keep"

tests:
  enabled: true